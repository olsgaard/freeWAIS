%!
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%
% FrameMaker PostScript Prolog 2.0, for use with FrameMaker 2.0
% Copyright (c) 1986,87,89 by Frame Technology, Inc.  All rights reserved.
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
/FMversion (2.0) def 
% Set up Color vs. Black-and-White
	/FMPrintInColor systemdict /colorimage known def
% Uncomment this line to force b&w on color printer
%   /FMPrintInColor false def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
%%EndProlog
%%BeginSetup
(2.0) FMVERSION
1 1 612 792 0 1 15 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
%%EndSetup
0 9 /Times-BoldItalic FMDEFINEFONT
1 9 /Times-Bold FMDEFINEFONT
2 8 /Times-Roman FMDEFINEFONT
3 10 /Times-Roman FMDEFINEFONT
4 14 /Times-Bold FMDEFINEFONT
5 6 /Times-Roman FMDEFINEFONT
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
50.4 141.75 298.8 603 R
7 X
0 K
V
0 F
0 X
-0.05 (Abstract) 50.4 597 P
1 F
-0.05 (. T) 81.36 597 P
-0.05 (oday most text is stor) 90.97 597 P
-0.05 (ed in electr) 171.97 597 P
-0.05 (onic form at one point) 214.13 597 P
-0.11 (or another in its life. It is then perhaps surprising that computers) 50.4 587 P
3.2 (have made r) 50.4 577 P
3.2 (elatively little impact on how it is stor) 104.07 577 P
3.2 (ed and) 269.87 577 P
2.61 (r) 50.4 567 P
2.61 (etrieved, but such is the case. The W) 54.23 567 P
2.61 (ide Ar) 211.87 567 P
2.61 (ea Information) 238.53 567 P
0.26 (Server pr) 50.4 557 P
0.26 (oject \050W) 87.18 557 P
0.26 (AIS\051 seeks to alleviate this pr) 119.14 557 P
0.26 (oblem by making) 231.86 557 P
0 (text databases widely accessible via a common user interface and) 50.4 547 P
-0.2 (wide ar) 50.4 537 P
-0.2 (ea networking. The ultimate success of the effort depends,) 78.74 537 P
2.95 (in part, on the availability of high-performance text sear) 50.4 527 P
2.95 (ch) 289.81 527 P
0.5 (engines. Such engines can be implemented on massively parallel) 50.4 517 P
2.02 (machines, using either signatur) 50.4 507 P
2.02 (e \336le or inverted \336le database) 176.13 507 P
0.76 (structur) 50.4 497 P
0.76 (es. Inverted \336les ar) 81.68 497 P
0.76 (e particularly appealing, and permit) 156.69 497 P
0.42 (databases as large as 8192 Gigabytes to be sear) 50.4 487 P
0.42 (ched in under 15) 233.36 487 P
(seconds, using curr) 50.4 477 T
(ently available hardwar) 123.89 477 T
(e) 215.1 477 T
2 F
(I. INTRODUCTION) 141.07 460.32 T
3 F
0.04 (A lar) 60.48 441.63 P
0.04 (ge proportion of the American workforce is constantly) 80.6 441.63 P
0.25 0.33 (producing or consuming text in various forms \321 internal) 50.4 430.13 B
0.25 0.09 (memoranda, reports, correspondence, technical papers, elec-) 50.4 418.63 B
0.25 0.1 (tronic mail, etc. \321 which originates in electronic form. And) 50.4 407.13 B
-0.13 (so it is perhaps surprising that computers have made relatively) 50.4 395.63 P
0.25 0.14 (little impact on how such information is f) 50.4 384.13 B
0.25 0.14 (iled and retrieved.) 223.3 384.13 B
0.18 (Just as they did a hundred years ago, people store their text in) 50.4 372.63 P
0.25 0.19 (hierarchical f) 50.4 361.13 B
0.25 0.19 (iles, ask co-workers if they know where some) 105.74 361.13 B
0.25 0.44 (data might be found, and run to the librarian for help in) 50.4 349.63 B
0.25 0.03 (accessing external data. T) 50.4 338.13 B
0.25 0.03 (wo recent developments \321 parallel) 154.59 338.13 B
0.04 (information retrieval systems and wide-area information serv-) 50.4 326.63 P
0.25 0.12 (ers \321 have the potential to vastly improve on this situation,) 50.4 315.13 B
0.25 0.12 (making essentially all the information in the world instantly) 50.4 303.63 B
(available from a desktop computer) 50.4 292.13 T
(.) 188.63 292.13 T
2 F
(II. CURRENT PRACTICE) 130.96 274.62 T
3 F
0.25 0.18 (The way in which electronic text is stored and or) 60.48 255.93 B
0.25 0.18 (ganized) 266.62 255.93 B
0.25 0.1 (\050or) 50.4 244.43 B
0.25 0.1 (, in most cases, not or) 61.96 244.43 B
0.25 0.1 (ganized\051 makes its ef) 152.3 244.43 B
0.25 0.1 (fective use for) 239.69 244.43 B
(purposes other than generating hard-copy very dif) 50.4 232.93 T
(\336cult.) 250.06 232.93 T
0.25 0.1 (Personal data is generally stored in a hierarchical f) 60.48 214.08 B
0.25 0.1 (ile sys-) 269.35 214.08 B
0.09 (tem, but otherwise unor) 50.4 202.58 P
0.09 (ganized. An individual, looking for an) 145.41 202.58 P
0.25 0 (old report or an old piece of electronic mail may have to look) 50.4 191.08 B
0.25 0.25 (through a lar) 50.4 179.58 B
0.25 0.25 (ge number of directories on several machines) 105.04 179.58 B
0.25 0.09 (before the wanted data is found. Information gets lost, and a) 50.4 168.08 B
0.25 0.08 (considerable amount of time is wasted trying to guess where) 50.4 156.58 B
(information might be located.) 50.4 145.08 T
313.2 72 561.6 603 R
7 X
V
0 X
0.25 0.02 (Most companies do not have an over) 323.28 596.33 B
0.25 0.02 (-all structure for man-) 472.42 596.33 B
0.25 0.09 (aging electronic text. Some electronic mail will be archived.) 313.2 584.83 B
0.25 0.14 (Individuals may maintain their own on-line copies of corre-) 313.2 573.33 B
0.25 0.33 (spondence they have produced. Engineering projects will) 313.2 561.83 B
0.25 0.1 (have their own design f) 313.2 550.33 B
0.25 0.1 (iles. Reports prepared by consultants) 409.7 550.33 B
0.25 0.25 (may be f) 313.2 538.83 B
0.25 0.25 (iled by the person who requested the report. Files) 350.1 538.83 B
0.25 0.06 (containing presentation graphics will reside on various desk-) 313.2 527.33 B
0.25 0.15 (top computers. If an individual wants to f) 313.2 515.83 B
0.25 0.15 (ind a piece of text) 486.25 515.83 B
-0.16 (which is stored on-line, he must \336gure out who to ask. On-line) 313.2 504.33 P
(systems are rarely if ever available.) 313.2 492.83 T
0.25 0.09 (Of) 323.28 475.83 B
0.25 0.09 (f-site electronic text is better or) 333.82 475.83 B
0.25 0.09 (ganized but, in practice,) 463.05 475.83 B
0.25 0.23 (not much more accessible. Some databases are elaborately) 313.2 464.33 B
-0.11 (indexed using a tightly controlled vocabulary) 313.2 452.83 P
-0.11 (. Other databases) 493.27 452.83 P
0.25 0.13 (are unindexed, relying on full-text searches. Every database) 313.2 441.33 B
-0.17 (vendor has its own indexing method and its own query syntax.) 313.2 429.83 P
-0.18 (In the majority of cases, the query syntax consists of a mixture) 313.2 418.33 P
0.25 0.15 (of boolean and proximity operators. At the very least, these) 313.2 406.83 B
0.25 0.31 (query interfaces are dif) 313.2 395.33 B
0.25 0.31 (f) 413.66 395.33 B
0.25 0.31 (icult for non-experts to use ef) 416.75 395.33 B
0.25 0.31 (fec-) 545.45 395.33 B
0.25 0.14 (tively; one is always walking a thin line between getting no) 313.2 383.83 B
0.25 0.06 (documents and getting too many documents.These databases) 313.2 372.33 B
0.25 0.24 (are generally available only as dial-up services, and rarely) 313.2 360.83 B
0.25 0.04 (support anything except for teletype-style interfaces. In addi-) 313.2 349.33 B
0.25 0.18 (tion, they have traditionally char) 313.2 337.83 B
0.25 0.18 (ged their users by the con-) 450.2 337.83 B
0.25 0.03 (nect-minute, a practice which strongly discourages the use of) 313.2 326.33 B
0.25 0.09 (these systems for browsing and interactive exploration. As a) 313.2 314.83 B
0.25 0.3 (result of all these factors, end-users are discouraged from) 313.2 303.33 B
0.25 0.24 (signing onto a database and looking for information them-) 313.2 291.83 B
0.17 (selves; if they need on-line text search capability) 313.2 280.33 P
0.17 (, they will be) 508.89 280.33 P
-0.23 (referred to a librarian. There is a good chance that the librarian) 313.2 268.83 P
0.25 0.04 (will f) 313.2 257.33 B
0.25 0.04 (ind the necessary information, but this may take several) 334.52 257.33 B
0.25 0.05 (days, and the expense of the process discourages users going) 313.2 245.83 B
(to an external information source for most inquiries.) 313.2 234.33 T
2 F
(III. WIDE AREA INFORMA) 362.33 218.67 T
(TION SER) 456.92 218.67 T
(VERS) 492.04 218.67 T
3 F
0.18 (V) 323.28 201.83 P
0.18 (arious technologies exist which can solve these problems.) 329.39 201.83 P
0.17 (Individual and corporate documents can be made more acces-) 313.2 190.33 P
-0.12 (sible by storing them in full text databases. Remote access can) 313.2 178.83 P
-0.17 (be simpli\336ed by use of wide area networks. The varying query) 313.2 167.33 P
0.25 0.15 (languages of dif) 313.2 155.83 B
0.25 0.15 (ferent external databases can be forced into) 380.36 155.83 B
0.25 0.01 (conformity by the establishment of standards. The dif) 313.2 144.33 B
0.25 0.01 (f) 529.83 144.33 B
0.25 0.01 (iculties) 532.62 144.33 B
0.25 0.09 (associated with using boolean query systems can be avoided) 313.2 132.83 B
-0.25 (by using several non-boolean search methods developed in the) 313.2 121.33 P
0.25 0.13 (information retrieval community) 313.2 109.83 B
0.25 0.13 (. The ease of using the sys-) 448.15 109.83 B
0.23 0.17 (tems can be improved by the development of graphic inter-) 313.2 98.33 B
0.25 0.05 (faces. The W) 313.2 86.83 B
0.25 0.05 (ide Area Information Server \050W) 366.88 86.83 B
0.25 0.05 (AIS\051 project [1]) 496.44 86.83 B
0.25 0.07 (seeks to combine these technologies in order to make a wide) 313.2 75.33 B
49 621 563 720 R
7 X
V
4 F
0 X
-0.28 (Massively Parallel Information Retrieval for W) 162.39 710.67 S
-0.28 (ide ) 432.57 710.67 S
-0.28 (Ar) 232.16 692.67 S
-0.28 (ea Information Servers) 247.66 692.67 S
3 F
(Craig Stan\336ll) 279.2 669.33 T
(Thinking Machines Corporation) 241.6 657.33 T
(245 First Street) 275.18 645.33 T
(Cambridge MA 02154) 260.75 633.33 T
49 72 300 114.88 R
7 X
V
2 F
0 X
(Received 29 July 1991.) 49 109.54 T
5 F
0.09 (\250) 49 99.24 P
2 F
0.12 (Connection Machine is a registered trademark of Thinking Machines Corpo-) 53.56 96.04 P
0.18 0.05 (ration. CM, CM-2, and Datavault are trademarks of Thinking Machines Cor-) 49 86.54 B
0.2 0.11 (poration. ) 49 77.04 B
5 F
0.15 0.11 (\250) 80.92 80.24 B
2 F
0.2 0.11 (Sun and ) 85.58 77.04 B
5 F
0.15 0.11 (\250) 114.82 80.24 B
2 F
0.2 0.11 (Sun-4 are registered trademarks of Sun Microsystems,) 119.48 77.04 B
FMENDPAGE
%%EndPage: "1" 2
0 10 /Times-Italic FMDEFINEFONT
%%Page: "2" 2
612 792 0 FMBEGINPAGE
50.4 72 298.8 720 R
7 X
0 K
V
3 F
0 X
0.25 0.08 (variety of data available in a desktop environment. This sec-) 50.4 713.33 B
0.12 (tion will describe the major components of the current system) 50.4 701.83 P
(\050Fig. 1\051.) 50.4 690.33 T
0 F
(A. Sear) 50.4 385.39 T
(ch Methods) 79.45 385.39 T
3 F
0.13 (The search method used in W) 60.48 368.61 P
0.13 (AIS is based on several infor-) 179.09 368.61 P
0.25 0.01 (mation retrieval techniques developed in the 1970\325) 50.4 357.11 B
0.25 0.01 (s [2]. Que-) 255.15 357.11 B
0.25 0.61 (ries consist of short natural language phrases, such as) 50.4 345.61 B
-0.07 (\322Corazon Aquino and the Philippine Election.\323 Each phrase is) 50.4 334.11 P
0.11 (broken into primitive components such as \322Corazon Aquino,\323) 50.4 322.61 P
0.25 0.06 (and \322Philippine Election,\323 and each component is assigned a) 50.4 311.11 B
0.17 (numerical weight with rare \050i.e. more speci\336c\051 terms assigned) 50.4 299.61 P
0.25 0.11 (higher value. Every document in the database is then scored) 50.4 288.11 B
0.19 (against this query by summing the weights of the query terms) 50.4 276.61 P
0.25 0.19 (it contains. The documents are then ranked from highest to) 50.4 265.11 B
0.25 0.05 (lowest, and the best matches presented to the user) 50.4 253.61 B
0.25 0.05 (. All this is) 253.54 253.61 B
0.25 0.26 (hidden from the user) 50.4 242.11 B
0.25 0.26 (, who knows only that he has asked a) 139.03 242.11 B
0.24 (question and gotten back some documents which are likely to) 50.4 230.61 P
0.25 0.15 (be relevant. The user may then browse the full text of these) 50.4 219.11 B
(documents.) 50.4 207.61 T
0.25 0.2 (In order to focus the search, the user may indicate to the) 60.48 190.33 B
0.25 0.03 (system that a given document is \322relevant\323 to his search \050this) 50.4 178.83 B
0.25 0.39 (is called \322relevance feedback\323 [3]. The system will then) 50.4 167.33 B
0.25 0.18 (examine the full text of that document, break it into words,) 50.4 155.83 B
0.25 0.25 (and use the most important words in the document to con-) 50.4 144.33 B
0.25 0.19 (struct a new query) 50.4 132.83 B
0.25 0.19 (. This query will be run against the data-) 127.44 132.83 B
0.25 0.14 (base, and the result presented to the user) 50.4 121.33 B
0.25 0.14 (. In most cases, the) 219.06 121.33 B
0.25 0.1 (results of this search will contain a high proportion of docu-) 50.4 109.83 B
0.25 0.33 (ments on the same topic as the feedback document. Once) 50.4 98.33 B
0.25 0.12 (again, this process is hidden from the user) 50.4 86.83 B
0.25 0.12 (, who only knows) 225.17 86.83 B
0.25 0.03 (that he has indicated to the system that a particular document) 50.4 75.33 B
50.4 72 298.8 720 C
60.3 399.33 288.9 687 C
60.3 399.33 288.9 687 R
7 X
0 K
V
2 F
0 X
(FIG. 1: W) 120.85 411.12 T
(AIS ARCHITECTURE) 152.61 411.12 T
116.1 653.05 116.1 635.52 2 L
2 H
2 Z
N
179.1 653.05 179.1 635.52 2 L
N
242.1 653.05 242.1 635.52 2 L
N
107.1 635.52 242.1 635.52 2 L
N
(Local Area Network) 116.1 626.71 T
233.1 635.52 233.1 618 2 L
N
(Local) 223.98 606.53 T
206.1 582.95 260.1 618 R
0.5 H
N
(Information) 213.97 598.74 T
188.1 635.52 188.1 547.9 2 L
N
(W) 116.1 568.83 T
(ide Area Network) 123.33 568.83 T
(Server) 222.65 590.96 T
(Public) 231.86 457.58 T
215.1 434 269.1 469.05 R
N
(Information) 222.97 449.79 T
(Server) 231.65 442.01 T
(Local) 97.98 606.53 T
80.1 582.95 134.1 618 R
N
(Information) 87.97 598.74 T
(Server) 96.65 590.96 T
107.1 635.52 107.1 618 2 L
2 H
N
188.1 565.43 116.1 565.43 2 L
0.5 H
N
(Corporate) 100.08 536.44 T
89.1 512.86 143.1 547.9 R
N
(Information) 96.97 528.65 T
(Server) 105.65 520.86 T
116.1 565.43 116.1 547.9 2 L
N
188.1 565.43 242.1 565.43 2 L
N
71.1 486.57 278.1 679.33 R
3 H
3 X
N
242.1 477.81 152.1 477.81 2 L
0.5 H
0 X
N
(Corporate) 172.08 536.44 T
161.1 512.86 215.1 547.9 R
N
(Information) 168.97 528.65 T
(Server) 177.65 520.86 T
(Public) 141.86 457.58 T
125.1 434 179.1 469.05 R
N
(Information) 132.97 449.79 T
(Server) 141.65 442.01 T
152.1 477.81 152.1 469.05 2 L
N
(Corporation Boundary) 75.32 492.24 T
152.1 653.05 206.1 670.57 R
7 X
V
0 X
N
89.1 653.05 143.1 670.57 R
7 X
V
0 X
N
215.1 653.05 269.1 670.57 R
7 X
V
0 X
N
(User Interface) 156.31 659.1 T
(User Interface) 93.31 659.1 T
(User Interface) 219.31 659.1 T
242.1 565.43 242.1 469.05 2 L
N
50.4 72 298.8 720 C
0 0 612 792 C
313.2 72 561.6 720 R
7 X
0 K
V
3 F
0 X
0.25 0.16 (was interesting, and that the system has presented him with) 313.2 713.33 B
(more documents on the same topic.) 313.2 701.83 T
0.02 (This sort of search system has several advantages. First and) 323.28 684.43 P
0.25 0.08 (foremost, because queries are expressed in natural language,) 313.2 672.93 B
0.25 0.17 (there is no need for the user to learn an artif) 313.2 661.43 B
0.25 0.17 (icial query lan-) 498.16 661.43 B
0.07 (guage. Second, the document ranking scheme, in which docu-) 313.2 649.93 P
0.25 0.31 (ments are presented to the user in order of likely interest,) 313.2 638.43 B
-0.13 (eliminates some of the brittleness of boolean systems; the user) 313.2 626.93 P
0.25 0.16 (will always f) 313.2 615.43 B
0.25 0.16 (ind something, without being overwhelmed by) 366.91 615.43 B
0.25 0.11 (the thousands of documents which may result from a poorly) 313.2 603.93 B
0.25 0.16 (crafted boolean query) 313.2 592.43 B
0.25 0.16 (. Third, the use of relevance feedback) 403.63 592.43 B
0.15 (gives a convenient method for focusing a search, enabling the) 313.2 580.93 P
0.25 0.03 (user to be conf) 313.2 569.43 B
0.25 0.03 (ident that he has found a majority of the docu-) 372.94 569.43 B
-0.23 (ments on a given topic. Finally) 313.2 557.93 P
-0.23 (, the natural language/relevance) 435.2 557.93 P
0.25 0.03 (feedback interface style provides the designer of a query sys-) 313.2 546.43 B
0.25 0.31 (tem with a great deal of freedom in the choice of specif) 313.2 534.93 B
0.25 0.31 (ic) 554.07 534.93 B
0.04 (information retrieval algorithms. As better methods are devel-) 313.2 523.43 P
-0.22 (oped, they can be incorporated into the system without forcing) 313.2 511.93 P
(the users to learn a new query language.) 313.2 500.43 T
0 F
(B.  Graphic Interfaces) 313.2 483.03 T
3 F
0.25 0.38 (The second major component of the W) 323.28 466.13 B
0.25 0.38 (AIS system is a) 493.04 466.13 B
0.25 0.04 (graphic interface. This interface needs to support natural lan-) 313.2 454.63 B
0.25 0.15 (guage querying, relevance feedback, document display) 313.2 443.13 B
0.25 0.15 (, and) 541.31 443.13 B
0.25 0.13 (database selection. Interaction is def) 313.2 431.63 B
0.25 0.13 (ined in terms of several) 463.78 431.63 B
0.25 0.17 (kinds of objects \050represented by icons\051 plus actions such as) 313.2 420.13 B
0.25 0.19 (dragging and opening. For example, to initiate a search the) 313.2 408.63 B
0.25 0.16 (user will create a \322question\323, which will have slots for data) 313.2 397.13 B
0.19 (sources, relevant documents, and a natural language question.) 313.2 385.63 P
0.25 0.13 (Data sources and relevant documents are added to the ques-) 313.2 374.13 B
-0.23 (tion by dragging their icons into the appropriate slots. The nat-) 313.2 362.63 P
0.25 0.13 (ural language query is created by typing into the query slot.) 313.2 351.13 B
0.25 0.09 (When the user clicks on a \322search\323 button, the interface will) 313.2 339.63 B
0.25 0.03 (contact all selected data sources, send them a query) 313.2 328.13 B
0.25 0.03 (, and wait) 521.7 328.13 B
0.03 (for a response. When the response comes, the headlines of the) 313.2 316.63 P
0.25 0.09 (relevant documents will appear in another frame, along with) 313.2 305.13 B
0.25 0.03 (icons standing for the documents. These icons can be opened) 313.2 293.63 B
0.25 0.04 (to examine the full text, or they can be dragged back into the) 313.2 282.13 B
-0.16 (\322relevant documents\323 slot to feed them back into the query) 313.2 270.63 P
-0.16 (. At) 546.77 270.63 P
0.25 0.03 (any time, the user can start a new query \050without abandoning) 313.2 259.13 B
(the old one\051 by creating a second question object.) 313.2 247.63 T
0 F
(C.  Networks) 313.2 230.23 T
3 F
0.25 0.1 (The third major component of the W) 323.28 213.33 B
0.25 0.1 (AIS system is a wide) 474.26 213.33 B
0.25 0.15 (area network plus a protocol enabling clients and servers to) 313.2 201.83 B
0.25 0.28 (exchange information. If a reliable network already exists) 313.2 190.33 B
0.25 0.04 (\050e.g. NSF-net\051, then little needs to be done except for assign-) 313.2 178.83 B
-0.08 (ing a network address to the server) 313.2 167.33 P
-0.08 (. If a good network connec-) 451.52 167.33 P
0.25 0.15 (tion is not available, then the situation becomes much more) 313.2 155.83 B
-0.17 (dif) 313.2 144.33 P
-0.17 (\336cult. A 9600 Baud telephone connection is generally suf) 324.12 144.33 P
-0.17 (\336-) 552.72 144.33 P
0.25 0.02 (cient if the transmission protocol includes error detection and) 313.2 132.83 B
0.21 (correction. Once a server has been set up on the network, it is) 313.2 121.33 P
0.25 0.22 (necessary for clients to be able to contact it. This has been) 313.2 109.83 B
-0.16 (done by establishing a database called the directory of servers,) 313.2 98.33 P
0.25 0.17 (which is a W) 313.2 86.83 B
0.25 0.17 (AIS database having descriptions and network) 367.34 86.83 B
0.25 0.06 (addresses for all publicly available W) 313.2 75.33 B
0.25 0.06 (AIS servers, and which) 466.33 75.33 B
FMENDPAGE
%%EndPage: "2" 3
1 9 /Helvetica-Bold FMDEFINEFONT
4 12 /Times-Roman FMDEFINEFONT
5 9 /Times-Roman FMDEFINEFONT
6 7 /Times-Roman FMDEFINEFONT
7 7 /Symbol FMDEFINEFONT
8 9 /Symbol FMDEFINEFONT
%%Page: "3" 3
612 792 0 FMBEGINPAGE
50.4 72 298.8 720 R
7 X
0 K
V
3 F
0 X
0.25 0.08 (all W) 50.4 713.33 B
0.25 0.08 (AIS servers know how to contact. The f) 71.88 713.33 B
0.25 0.08 (inal component) 235.56 713.33 B
0.25 0.02 (of the W) 50.4 701.83 B
0.25 0.02 (AIS network architecture is the protocol between the) 84.91 701.83 B
0.25 0.14 (servers and the clients. The starting point for this was the Z) 50.4 690.33 B
0.23 0.11 (39.50 protocol, which was initially set up to allow the inter-) 50.4 678.83 B
0.25 0.18 (change of information between libraries. This protocol was) 50.4 667.33 B
0.25 0.01 (inadequate in several ways \050it did not support relevance feed-) 50.4 655.83 B
0.25 0.01 (back, it did not provide adequate support for the transmission) 50.4 644.33 B
0.25 0.32 (of the full text of documents, etc.\051, but was fairly easy to) 50.4 632.83 B
(extend. ) 50.4 621.33 T
2 F
(IV) 119.39 606.45 T
(. P) 126.79 606.45 T
(ARALLEL TEXT SER) 134.5 606.45 T
(VERS) 209.37 606.45 T
3 F
0.25 0.06 (For W) 60.48 590.39 B
0.25 0.06 (AIS to succeed, it must be possible to build full text) 85.74 590.39 B
0.25 0.03 (retrieval systems which can deliver quick responses \0501-2 sec-) 50.4 578.89 B
0.25 0.31 (onds is ideal\051 when searching databases having anywhere) 50.4 567.39 B
0.25 0.25 (from a few megabytes of text \050e.g. a personal database\051 to) 50.4 555.89 B
0.25 0.03 (hundreds, thousands, or even tens of thousands of Gigabytes.) 50.4 544.39 B
0.25 0.06 (Some databases can be adequately served by serial machines) 50.4 532.89 B
0.25 0.08 (\050e.g. personal or departmental databases having a few mega-) 50.4 521.39 B
-0.17 (bytes to one gigabyte of data\051. Other databases \321 those which) 50.4 509.89 P
0.25 0.03 (are either extremely lar) 50.4 498.39 B
0.25 0.03 (ge \050e.g. a corporate text repository\051 or) 144.63 498.39 B
0.25 0.12 (accessed very heavily \050e.g. an external database service\051 ) 50.4 486.89 B
0.25 0.12 (\321) 288.92 486.89 B
-0.25 (will require levels of performance which cannot be attained on) 50.4 475.39 P
0.25 0.06 (serial machines. For these databases, parallel text servers are) 50.4 463.89 B
(an appropriate technology) 50.4 452.39 T
(.) 154.11 452.39 T
0 F
(A. Parallel Signatur) 50.4 436.17 T
(e Files) 130.83 436.17 T
3 F
0.25 0.18 (Initial work on parallel text servers represented the data-) 60.48 420.45 B
0.25 0 (base as an overlap encoded signature f) 50.4 408.95 B
0.25 0 (ile [4][5]. In this repre-) 205.26 408.95 B
0.25 0.06 (sentation, each document is broken into segments containing) 50.4 397.45 B
0.25 0.22 (\050for example\051 30 words. A signature f) 50.4 385.95 B
0.25 0.22 (ile is then created by) 210.57 385.95 B
0.24 (applying the following procedure to each such segment in the) 50.4 374.45 P
(database:) 50.4 362.95 T
1 F
(1.) 50.4 346.72 T
3 F
0.25 0.05 (A region of memory is allocated and initialized to 0. This) 63.86 346.72 B
(will become the signature of the text segment.) 63.86 335.72 T
1 F
(2.) 50.4 318 T
3 F
-0.04 (Several hash functions are applied to each word in the seg-) 63.86 318 P
0.25 0.18 (ment. The bits of the signature addressed by these func-) 63.86 307 B
(tions are set to 1.) 63.86 296 T
1 F
(3.) 50.4 278.28 T
3 F
0.25 0.26 (A group of consecutive signatures are assigned to each) 63.86 278.28 B
(processor) 63.86 267.28 T
(.) 101.61 267.28 T
1 F
(4.) 50.4 249.55 T
3 F
0.25 0.05 (T) 63.86 249.55 B
0.25 0.05 (o probe a signature for the presence of a word, the same) 69.33 249.55 B
0.25 0.05 (set of hash functions are applied to it and the correspond-) 63.86 238.56 B
-0.24 (ing bits of the signature are ANDed together) 63.86 227.56 P
-0.24 (. If the result is) 239.54 227.56 P
0.25 0.08 (1, then the word is assumed to be present in the segment,) 63.86 216.56 B
-0.13 (even though there is a small possibility that the 1 is a result) 63.86 205.56 P
(of coincidence.) 63.86 194.56 T
-0.1 (Signature \336les have a number of advantages, namely: 1\051 the) 60.48 178.83 P
0.25 0.1 (probe operation is very fast, particularly on SIMD machines) 50.4 167.33 B
0.25 0.22 (constructed from bit-serial processors \050e.g. the Connection) 50.4 155.83 B
0.25 0 (Machine models CM-1 and CM-2 [6], the Goodyear MPP [7]) 50.4 144.33 B
-0.21 (and the DAP [8]; and 2\051 the signature \336le is much smaller than) 50.4 132.83 P
0.25 0.51 (the full text.The degree of compression depends on the) 50.4 121.33 B
0.25 0.01 (acceptable error rate in the probe step, with 30% being possi-) 50.4 109.83 B
0.25 0.12 (ble for systems having error rates on the order of ) 50.4 98.33 B
0.25 0.12 (.) 296.18 98.33 B
0.25 0.12 (The disadvantages of this scheme are 1\051 that the system can) 50.4 86.83 B
0.23 0 (only represent the presence or absence of a word; other infor-) 50.4 75.33 B
256.92 95.38 296.18 108.6 C
5 F
0 X
0 K
(1) 257.92 98.33 T
(.) 262.41 98.33 T
(2) 264.66 98.33 T
(1) 278.59 98.33 T
(0) 283.08 98.33 T
6 F
(6) 291.68 102.84 T
7 F
(-) 287.58 102.84 T
8 F
(\264) 271.4 98.33 T
0 0 612 792 C
313.2 72 561.6 720 R
7 X
0 K
V
3 F
0 X
0.25 0.55 (mation, such as its position and the number of times it) 313.2 713.33 B
0.25 0.1 (occurred will necessarily be lost [9][10]; and 2\051 that there is) 313.2 701.83 B
0.25 0.21 (no ef) 313.2 690.33 B
0.25 0.21 (fective strategy for searching databases which are too) 334.59 690.33 B
(lar) 313.2 678.83 T
(ge to \336t in main memory [1) 323.56 678.83 T
(1]. ) 433.13 678.83 T
0.25 0.1 (Nevertheless, such systems are capable of delivering high) 323.28 663.19 B
0.25 0.28 (performance for databases as lar) 313.2 651.69 B
0.25 0.28 (ge as 25 Gigabytes. Main) 452.29 651.69 B
0.25 0.26 (memory systems of this sort are a good choice for heavily) 313.2 640.19 B
-0.08 (accessed databases where the high performance translates into) 313.2 628.69 P
(a high throughput.) 313.2 617.19 T
0 F
(B. ) 313.2 601.55 T
3 F
( ) 324.3 601.55 T
0 F
(Parallel Inverted Files) 326.8 601.55 T
3 F
0.25 0.05 (For databases which are too lar) 323.28 586.4 B
0.25 0.05 (ge for available memory or) 450.54 586.4 B
0.25 0.34 (for which the number of inquiries per second is not lar) 313.2 574.9 B
0.25 0.34 (ge) 551.83 574.9 B
0.08 (enough to justify the expense of a lar) 313.2 563.4 P
0.08 (ge primary memory) 461.53 563.4 P
0.08 (, sec-) 540.43 563.4 P
0.25 0.05 (ondary storage must be employed. As noted above, this rules) 313.2 551.9 B
-0.18 (out the use of the signature algorithm. The best solution in this) 313.2 540.4 P
0.25 0.19 (case is to adapt the inverted f) 313.2 528.9 B
0.25 0.19 (ile structure generally used in) 436.64 528.9 B
0.25 0.49 (serial systems. In this sort of system, each document is) 313.2 517.4 B
0.25 0.04 (indexed to produce a set of postings. Each posting contains a) 313.2 505.9 B
0.25 0.07 (word, an identif) 313.2 494.4 B
0.25 0.07 (ier for the document it was contained in, and) 377.89 494.4 B
0.25 0.27 (additional information \050e.g. a numerical weight indicating) 313.2 482.9 B
0.25 0.17 (how many times it occurred\051 which may be required by the) 313.2 471.4 B
-0.13 (search strategy being used. These postings are sorted by word,) 313.2 459.9 P
0.25 0 (the words are stripped from the postings, and the results writ-) 313.2 448.4 B
0.25 0.04 (ten to disk. At the same time, an index is built which permits) 313.2 436.9 B
0.14 (the postings for a given word to be found on disk. The advan-) 313.2 425.4 P
0.25 0.11 (tage of this f) 313.2 413.9 B
0.25 0.11 (ile structure is that a relatively small amount of) 365.24 413.9 B
0.25 0.07 (data needs to be accessed in answering a query) 313.2 402.4 B
0.25 0.07 (. The primary) 505.54 402.4 B
0.05 (disadvantage of this \336le structure is that it is fairly complex to) 313.2 390.9 P
0.25 0.06 (build and maintain and, in particular) 313.2 379.4 B
0.25 0.06 (, real-time modif) 461.69 379.4 B
0.25 0.06 (ications) 530.09 379.4 B
(to the database are dif) 313.2 367.9 T
(\336cult to support.) 400.72 367.9 T
-0.04 (As noted above, W) 323.28 352.26 P
-0.04 (AIS text servers need to evaluate queries) 398.65 352.26 P
0.24 (consisting of words plus weights indicating the importance of) 313.2 340.76 P
0.25 0.26 (those words. The basic computation is to 1\051 create a score) 313.2 329.26 B
-0.06 (accumulator \050called a mailbox\051 for each document and zero it;) 313.2 317.76 P
0.25 0.08 (2\051 read the postings for each term in the query; and 3\051 incre-) 313.2 306.26 B
0.25 0.24 (ment the mailboxes for the documents referenced by these) 313.2 294.76 B
(postings.) 313.2 283.26 T
0.25 0.06 (In the simplest parallel inverted f) 323.28 267.62 B
0.25 0.06 (ile structure, the postings) 458.66 267.62 B
0.25 0.08 (are distributed arbitrarily across the processors and, at query) 313.2 256.12 B
0.13 (time, sent to the processor containing the appropriate mailbox) 313.2 244.62 P
0.25 0.25 ([12]. In a more complex f) 313.2 233.12 B
0.25 0.25 (ile structure, called a partitioned) 422.71 233.12 B
0.23 (posting \336le, the postings are stored on disk in such a way that) 313.2 221.62 P
0.25 0.25 (they will, when read into the machine\325) 313.2 210.12 B
0.25 0.25 (s memory) 477.66 210.12 B
0.25 0.25 (, be in the) 518.95 210.12 B
-0.17 (same processor as their mailbox [13]. The later \336le structure is) 313.2 198.62 P
-0.11 (somewhat faster than the former) 313.2 187.12 P
-0.11 (, as it involves no interproces-) 441.69 187.12 P
-0.1 (sor communication, but building this \336le structure is more dif-) 313.2 175.62 P
(\336cult.) 313.2 164.12 T
-0.22 (Benchmarks reveal that, using the partitioned algorithm and) 323.28 148.48 P
0.25 0.12 (an 8192 processor CM-2, it should be possible to evaluate a) 313.2 136.98 B
0.09 (10-term query against a 100 Gigabyte database in 1.8 seconds) 313.2 125.48 P
0.25 0.22 (\050compute only\051, vs. 45 seconds for a fast serial machine \050a) 313.2 113.98 B
(Sun 4/330\051.) 313.2 102.48 T
0.25 0.04 (The second major issue in parallel inverted f) 323.28 86.83 B
0.25 0.04 (ile design is I/) 503.97 86.83 B
0.25 0.1 (O. The Connection Machine supports a disk array called the) 313.2 75.33 B
FMENDPAGE
%%EndPage: "3" 4
0 8 /Times-Bold FMDEFINEFONT
1 8 /Times-Italic FMDEFINEFONT
%%Page: "4" 4
612 792 0 FMBEGINPAGE
50.4 72 298.8 720 R
7 X
0 K
V
3 F
0 X
0.25 0.2 (DataV) 50.4 713.33 B
0.25 0.2 (ault. Each DataV) 76.39 713.33 B
0.25 0.2 (ault can store up to 60 Gigabytes of) 147.57 713.33 B
0.25 0.06 (data, which would be suf) 50.4 701.83 B
0.25 0.06 (f) 152.88 701.83 B
0.25 0.06 (icient to hold the inverted f) 155.73 701.83 B
0.25 0.06 (ile for a) 266.73 701.83 B
-0.15 (database as lar) 50.4 690.33 P
-0.15 (ge as 180 Gigabytes. The DataV) 108.2 690.33 P
-0.15 (ault has a trans-) 236.24 690.33 P
0.25 0.18 (fer rate of 25 Megabytes per second. It may be used in two) 50.4 678.83 B
0.25 0.14 (modes: striped mode and independent disk mode. In striped) 50.4 667.33 B
0.25 0.16 (mode, all the disks in the DataV) 50.4 655.83 B
0.25 0.16 (ault operate synchronously) 184.52 655.83 B
0.25 0.16 (,) 296.3 655.83 B
0.25 0.21 (yielding a very high transfer rate. The disadvantage of this) 50.4 644.33 B
0.25 0.15 (mode is that it has a latency of 200 milliseconds, so that no) 50.4 632.83 B
0.25 0.1 (more than 5 I/O\325) 50.4 621.33 B
0.25 0.1 (s per second may be supported. In indepen-) 119.15 621.33 B
0.25 0.41 (dent disk mode, each disk may be given a dif) 50.4 609.83 B
0.25 0.41 (ferent seek) 250.89 609.83 B
0.25 0.15 (address. In this access mode, the DataV) 50.4 598.33 B
0.25 0.15 (ault\325) 215.38 598.33 B
0.25 0.15 (s latency is 225) 233.9 598.33 B
(milliseconds per 32 I/O\325) 50.4 586.83 T
(s. ) 147.29 586.83 T
-0.04 (According to one model of the retrieval process, an average) 60.48 566.26 P
0.25 0.6 (term from an average query will occur 3000 times per) 50.4 554.76 B
0.25 0.29 (Gigabyte of full text. Each term posting requires approxi-) 50.4 543.26 B
0.25 0.01 (mately four bytes of data. Evaluating a 10-term query against) 50.4 531.76 B
0.25 0.15 (a 100 Gigabyte database will thus require the transfer of 12) 50.4 520.26 B
0.25 0.06 (Megabytes of data, which should take slightly under 0.5 sec-) 50.4 508.76 B
0.25 0.1 (onds. A full discussion of the performance characteristics of) 50.4 497.26 B
-0.03 (parallel database servers is beyond the scope of this paper; the) 50.4 485.76 P
0.25 0.14 (interested reader is referred to [13]. T) 50.4 474.26 B
0.25 0.14 (able 1, taken from the) 207.07 474.26 B
0.25 0.01 (referenced paper) 50.4 462.76 B
0.25 0.01 (, summarizes the performance characteristics) 117.27 462.76 B
0.03 (of various systems having between 1.5 and 8192 Gigabytes of) 50.4 451.26 P
(data.) 50.4 439.76 T
2 F
(T) 159.04 420.52 T
(ABLE 1) 163.29 420.52 T
(PERFORMANCE OF CM-2 FOR V) 67.15 410.52 T
(ARIOUS DA) 183.85 410.52 T
(T) 226.27 410.52 T
(ABASE SIZES. ) 230.51 410.52 T
(TIMES IN SECONDS, 10-TERM QUERIES.) 100.86 400.52 T
0 F
(Size) 70.2 379.45 T
(Pr) 97.2 379.45 T
(ocessors) 105.49 379.45 T
(DataV) 142.2 379.45 T
(aults) 163.67 379.45 T
( T) 187.2 379.45 T
(ime) 194.39 379.45 T
(Storage Method) 232.2 379.45 T
2 F
(1.5 GB) 65.1 359.38 T
(4K) 114.43 359.38 T
(0) 156.2 359.38 T
(0.055) 190.2 359.38 T
(Main Memory) 232.2 359.38 T
(3 GB) 71.1 350.38 T
(8K) 114.43 350.38 T
(0) 156.2 350.38 T
(0.055) 190.2 350.38 T
(Main Memory) 232.2 350.38 T
(6 GB) 71.1 341.38 T
(16K) 110.43 341.38 T
(0) 156.2 341.38 T
(0.055) 190.2 341.38 T
(Main Memory) 232.2 341.38 T
(12 GB) 67.1 332.38 T
(32K) 110.43 332.38 T
(0) 156.2 332.38 T
(0.055) 190.2 332.38 T
(Main Memory) 232.2 332.38 T
(24 GB) 67.1 323.38 T
(64K) 110.43 323.38 T
(0) 156.2 323.38 T
(0.055) 190.2 323.38 T
(Main Memory) 232.2 323.38 T
(64 GB) 67.1 314.38 T
(8K) 114.43 314.38 T
(1) 156.2 314.38 T
(1.7) 190.2 314.38 T
(Independent Disk) 232.2 314.38 T
(128 GB) 63.1 305.38 T
(8K) 114.43 305.38 T
(1) 156.2 305.38 T
(2.8) 190.2 305.38 T
(Independent Disk) 232.2 305.38 T
(256 GB) 63.1 296.38 T
(16K) 110.43 296.38 T
(2) 156.2 296.38 T
(3.6) 190.2 296.38 T
(Striped Disk) 232.2 296.38 T
(512 GB) 63.1 287.38 T
(32K) 110.43 287.38 T
(4) 156.2 287.38 T
(3.6) 190.2 287.38 T
(Striped Disk) 232.2 287.38 T
(1024 GB) 59.1 278.38 T
(64K) 110.43 278.38 T
(8) 156.2 278.38 T
(3.6) 190.2 278.38 T
(Striped Disk) 232.2 278.38 T
(2048 GB) 59.1 269.38 T
(64K) 110.43 269.38 T
(16) 152.2 269.38 T
(5.1) 190.2 269.38 T
(Striped Disk) 232.2 269.38 T
(4096 GB) 59.1 260.38 T
(64K) 110.43 260.38 T
(32) 152.2 260.38 T
(8.2) 190.2 260.38 T
(Striped Disk) 232.2 260.38 T
(8192 GB) 59.1 251.38 T
(64K) 110.43 251.38 T
(64) 152.2 251.38 T
(12.4) 186.21 251.38 T
(Striped Disk) 232.2 251.38 T
(V) 142.25 231.31 T
(. CONCLUSIONS) 146.99 231.31 T
3 F
0.01 (This paper has ar) 60.48 210.91 P
0.01 (gued 1\051 that current methods for accessing) 128.88 210.91 P
0.25 0.23 (on-line text are inadequate; 2\051 that W) 50.4 199.41 B
0.25 0.23 (ide Area Information) 209.56 199.41 B
0.25 0.11 (Servers represent a possible solution to this problem; and 3\051) 50.4 187.91 B
0.25 0.01 (that parallel text servers can be built to support any size data-) 50.4 176.41 B
(base likely to be needed in the next decade.) 50.4 164.91 T
0.25 0.04 (This process is, of course, in its infancy) 60.48 144.33 B
0.25 0.04 (. At this point, it is) 221.93 144.33 B
0.25 0.01 (probably most important that people use and experiment with) 50.4 132.83 B
0.25 0.06 (W) 50.4 121.33 B
0.25 0.06 (ide Area Information Servers. This is currently being done) 59.49 121.33 B
0.25 0.03 (on a research basis at a variety of sites on the Internet. Those) 50.4 109.83 B
0.25 0.09 (who wish to obtain the software described in this paper may) 50.4 98.33 B
0.25 0.14 (do so by contacting Brewster Kahle via e-mail \050brewster@-) 50.4 86.83 B
(think.com\051. ) 50.4 75.33 T
313.2 72 561.6 720 R
7 X
V
2 F
0 X
(REFERENCES) 412.3 714.67 T
([1]) 313.2 698.67 T
0.2 0.13 (Kahle, B. & Medlar) 331.2 698.67 B
0.2 0.13 (, A. \0501991\051. An information system for corporate) 397.57 698.67 B
0.2 0.25 (users: W) 331.2 689.67 B
0.2 0.25 (ide Area Information Servers. T) 361.29 689.67 B
0.2 0.25 (echnical report TMC-199.) 471.7 689.67 B
(Cambridge MA: Thinking Machines Corporation.) 331.2 680.67 T
([2]) 313.2 665.67 T
-0.08 (Salton, G. \050Ed.\051. \0501971\051. ) 331.2 665.67 P
1 F
-0.08 (The Smart System --- Experiments in automatic) 410.61 665.67 P
(document pr) 331.2 656.67 T
(ocessing) 371.1 656.67 T
2 F
(. Englewood Clif) 398.64 656.67 T
(fs, NJ: Prentice-Hall.) 453.35 656.67 T
([3]) 313.2 641.67 T
-0.06 (Rocchio, J.J., Jr) 331.2 641.67 P
-0.06 (. \0501971\051. Relevance feedback in information retrieval. In) 381.28 641.67 P
0.2 0.07 (G. Salton \050Ed.\051, ) 331.2 632.67 B
1 F
0.2 0.07 (The Smart System --- Experiments in automatic docu-) 385.33 632.67 B
(ment pr) 331.2 623.67 T
(ocessing) 355.55 623.67 T
2 F
(. Englewood Clif) 383.09 623.67 T
(fs, NJ: Prentice-Hall.) 437.8 623.67 T
([4]) 313.2 608.67 T
0.11 (Stan\336ll, C. & Kahle, B. \0501986\051. Parallel free-text search on the Connec-) 331.2 608.67 P
(tion Machine system. ) 331.2 599.67 T
1 F
(Communications of the ACM) 401.83 599.67 T
2 F
(, ) 494.89 599.67 T
1 F
(29) 498.88 599.67 T
2 F
(\05012\051, 1229-1239.) 506.88 599.67 T
([5]) 313.2 584.67 T
0.2 0.24 (Pogue, C. & W) 331.2 584.67 B
0.2 0.24 (illet, P) 383.67 584.67 B
0.2 0.24 (. \0501987\051. Use of text signatures for document) 405.78 584.67 B
0.2 0.04 (retrieval in a highly parallel environment. ) 331.2 575.67 B
1 F
0.2 0.04 (Parallel Computing, 4, ) 469.5 575.67 B
2 F
0.2 0.04 (259-) 546.82 575.67 B
(268.) 331.2 566.67 T
([6]) 313.2 551.67 T
0.2 0.26 (Hillis, D. \0501985\051. ) 331.2 551.67 B
1 F
0.2 0.26 (The Connection Machine) 393.58 551.67 B
2 F
0.2 0.26 (. Cambridge, MA: MIT) 480.53 551.67 B
(Press.) 331.2 542.67 T
([7]) 313.2 527.67 T
0.2 0.11 (Batcher) 331.2 527.67 B
0.2 0.11 (, K.E. \0501980\051. Design of a massively parallel processor) 356.55 527.67 B
0.2 0.11 (. ) 539.4 527.67 B
1 F
0.2 0.11 (IEEE) 543.83 527.67 B
(T) 331.2 518.67 T
(ransactions on Computing, C-29\0509\051,) 335.21 518.67 T
2 F
( 836-840.) 451.37 518.67 T
([8]) 313.2 503.67 T
0.2 0.16 (Flanders, P) 331.2 503.67 B
0.2 0.16 (.M., Hunt, D.J., Reddaway) 368.26 503.67 B
0.2 0.16 (, S.F) 458.08 503.67 B
0.2 0.16 (., & Parkinson, D. \0501977\051.) 473.34 503.67 B
0.2 0.05 (Ef) 331.2 494.67 B
0.2 0.05 (f) 338.69 494.67 B
0.2 0.05 (icient high speed computing with the distributed array processor) 340.96 494.67 B
0.2 0.05 (. In) 550.61 494.67 B
-0.05 (D.JU. Kuck, D.H. Lawrie, & A.H. Sameh \050Eds.\051, ) 331.2 485.67 P
1 F
-0.05 (High speed computing) 489.76 485.67 P
(and algorithm or) 331.2 476.67 T
(ganization) 385.55 476.67 T
2 F
( \050pp. 113-127\051. New York: Academic Press.) 419.31 476.67 T
([9]) 313.2 461.67 T
0.2 0 (Croft, B. \0501988\051. Implementing ranking strategies using text signatures.) 331.2 461.67 B
1 F
(ACM T) 331.2 452.67 T
(ransactions on Of\336ce Information Systems 6) 354.08 452.67 T
2 F
(\0501\051, 42-62.) 496 452.67 T
([10]) 313.2 437.67 T
0.17 (Salton, G. & Buckley) 331.2 437.67 P
0.17 (, C. \0501987\051. Parallel text search methods. ) 400.27 437.67 P
1 F
0.17 (Commu-) 534.06 437.67 P
(nications of the ACM) 331.2 428.67 T
2 F
(, ) 399.39 428.67 T
1 F
(31) 403.38 428.67 T
2 F
(\0502\051, 202-215.) 411.38 428.67 T
([1) 313.2 413.67 T
(1]) 319.56 413.67 T
0.2 0.15 (Stone, H. \0501987\051. Parallel querying of lar) 331.2 413.67 B
0.2 0.15 (ge databases: A case study) 469.92 413.67 B
0.2 0.15 (.) 559.45 413.67 B
1 F
(Computer) 331.2 404.67 T
(, 20) 362.3 404.67 T
2 F
(\05010\051, 1) 374.29 404.67 T
(1-21.) 395.31 404.67 T
([12]) 313.2 389.67 T
-0.14 (Stan\336ll, C., Thau, R., & W) 331.2 389.67 P
-0.14 (altz, D. \0501989, June\051. A parallel indexed algo-) 415.81 389.67 P
0.2 0.21 (rithm for information retrieval. Paper presented at the International) 331.2 380.67 B
0.2 0.17 (Conference on Research and Development in Information Retrieval.) 331.2 371.67 B
(Cambridge, MA.) 331.2 362.67 T
([13]) 313.2 347.67 T
0.12 (Stan\336ll, C., & Thau, R. \0501991\051. Information retrieval on the Connection) 331.2 347.67 P
0.2 0.15 (Machine: 1 to 8192 gigabytes. ) 331.2 338.67 B
1 F
0.2 0.15 (Information Pr) 435.83 338.67 B
0.2 0.15 (ocessing and Manage-) 486.06 338.67 B
(ment 27) 331.2 329.67 T
2 F
(\0504\051, 285-310.) 356.74 329.67 T
FMENDPAGE
%%EndPage: "4" 5
%%Trailer
%%BoundingBox: 0 0 612 792
%%Pages: 4 1
%%DocumentFonts: Times-BoldItalic
%%+ Times-Bold
%%+ Times-Roman
%%+ Times-Italic
%%+ Helvetica-Bold
%%+ Symbol

